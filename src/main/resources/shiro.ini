[main]
#authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
#authc.loginUrl = /auth/login

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO

securityManager.sessionManager = $sessionManager
securityManager.sessionManager.sessionDAO = $sessionDAO

#-------------------
# Daterbase

jdbcRealm = com.scottlogic.thull.appstore.api.utils.auth.SaltedCustomRealm

sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
sha256Matcher.storedCredentialsHexEncoded = false
sha256Matcher.hashIterations = 1024
 
jdbcRealm.credentialsMatcher = $sha256Matcher
 
# User Query
# default is "select password from users where username = ?"
jdbcRealm.authenticationQuery = SELECT password, salt FROM User WHERE username = ?
 
# permissions
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.userRolesQuery = select roleName from UserRole where email = ?
jdbcRealm.permissionsQuery = select permission from RolesPermission where roleName = ?
 
# Connection 
dpProps = com.scottlogic.thull.appstore.api.utils.DBProperties
ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = dbProps.db.url
ds.user = dbProps.db.user
ds.password = dbProps.db.password 
jdbcRealm.dataSource= $ds
 
authc.usernameParam = username
authc.passwordParam = password
authc.failureKeyAttribute = shiroLoginFailure
 
# Use Built-in Chache Manager
builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager
 
securityManager.realms = $jdbcRealm

[users]
name = password, examplerole

[roles]
examplerole = something:readpermission

[urls]

#/** = authcBasic